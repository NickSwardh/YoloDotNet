<Project Sdk="Microsoft.NET.Sdk">

  <PropertyGroup>
    <TargetFramework>net8.0</TargetFramework>
    <ImplicitUsings>enable</ImplicitUsings>
    <Nullable>enable</Nullable>
    <AllowUnsafeBlocks>True</AllowUnsafeBlocks>
    <Title>YoloDotNet - C# .NET 8.0 implementation of YOLOv8-Yolov11</Title>
    <PackageProjectUrl>https://github.com/NickSwardh/YoloDotNet</PackageProjectUrl>
    <RepositoryUrl>https://github.com/NickSwardh/YoloDotNet</RepositoryUrl>
    <PackageTags>yolo;yolov8;yolov9;yolov10;yolov11;Yolo-World;ONNX;CUDA;GPU;classification;object;detection;segmentation;pose;estimation;oriented;image;vision;video;media;convert;encode;imagesharp;ffmpeg;process;core;ai</PackageTags>
    <PackAsTool>False</PackAsTool>
    <PackageIcon>icon.png</PackageIcon>
    <PackageReadmeFile></PackageReadmeFile>
    <Description>YoloDotNet is a blazing-fast C# .NET 8 implementation of Yolo and Yolo-World models for real-time object detection in images and videos. Powered by ONNX Runtime, and supercharged with GPU acceleration using CUDA, this app is all about detecting objects at lightning speed!

Supported Versions:
Yolov8, Yolov9, Yolov10, Yolov11, Yolo-World

Supported Tasks:
Classification
Object Detection
OBB Detection
Segmentation
Pose Estimation</Description>
    <Authors>Nick Swardh</Authors>
	<Version>2.2</Version>
    <Company />
    <PackageRequireLicenseAcceptance>True</PackageRequireLicenseAcceptance>
    <PackageLicenseExpression>GPL-3.0-only</PackageLicenseExpression>
    <PackageReleaseNotes>Things are moving fast, YoloDotNet 2.2 is already here packed with exciting new features! Ever wanted to experiment with Yolo-World models in .NET? Now's your chance. With Open-Vocabulary detection and real-time, zero-shot object detection, the model can now find objects it hasn't even been trained on. It's a whole new level of object detection fun!

In v2.2:

Yolo-World Support:
Yep, you read that right – Open-Vocabulary detection is now in the mix! Real-time, zero-shot object detection is here, so the model can spot  stuff it’s never been trained on. Mind-blowing, right? 

Pixel Confidence for Segmentation: 
Need more control? An optional pixel confidence parameter has been added for segmentation. Now it's possible to fine-tune those segmentation masks like a pro ;)</PackageReleaseNotes>
  </PropertyGroup>

  <ItemGroup>
    <None Include="D:\Documents\Yolodotnet Icon\icon.png">
      <Pack>True</Pack>
      <PackagePath>\</PackagePath>
    </None>
  </ItemGroup>

  <ItemGroup>
    <PackageReference Include="Microsoft.ML.OnnxRuntime.Managed" Version="1.19.2" />
    <PackageReference Include="SkiaSharp" Version="2.88.8" />
  </ItemGroup>

</Project>
